{"ast":null,"code":"import request from 'request';\nimport serverConf from '../config';\nimport { GET_ERRORS, SET_VOLUNTEERS } from './types'; // get volunteers from database\n\nexport const getVolunteers = dispatch => {\n  const endpoint = `${serverConf.uri}${serverConf.endpoints.volunteers.fetch}`;\n  request.get(endpoint, (error, response, body) => {\n    const res = JSON.parse(body);\n\n    if (error || !res.token) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: res\n      });\n    } else {\n      // set current volunteers\n      dispatch(getVolunteers(res));\n    }\n  });\n}; // set volunteers\n\nexport const setCurrentUser = volunteers => {\n  return {\n    type: SET_VOLUNTEERS,\n    payload: volunteers\n  };\n};","map":{"version":3,"sources":["/Users/aurelienmeray/Desktop/OG/vas/client/src/actions/getData.js"],"names":["request","serverConf","GET_ERRORS","SET_VOLUNTEERS","getVolunteers","dispatch","endpoint","uri","endpoints","volunteers","fetch","get","error","response","body","res","JSON","parse","token","type","payload","setCurrentUser"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA0C,SAA1C,C,CAEA;;AACA,OAAO,MAAMC,aAAa,GAAGC,QAAQ,IAAI;AAErC,QAAMC,QAAQ,GAAI,GAAEL,UAAU,CAACM,GAAI,GAAEN,UAAU,CAACO,SAAX,CAAqBC,UAArB,CAAgCC,KAAM,EAA3E;AAEAV,EAAAA,OAAO,CAACW,GAAR,CAAYL,QAAZ,EAAsB,CAACM,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,KAA2B;AAE7C,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAZ;;AAEA,QAAIF,KAAK,IAAI,CAACG,GAAG,CAACG,KAAlB,EAAyB;AACrBb,MAAAA,QAAQ,CAAC;AACLc,QAAAA,IAAI,EAAEjB,UADD;AAELkB,QAAAA,OAAO,EAAEL;AAFJ,OAAD,CAAR;AAIH,KALD,MAMK;AACD;AACAV,MAAAA,QAAQ,CAACD,aAAa,CAACW,GAAD,CAAd,CAAR;AACH;AACJ,GAdD;AAeH,CAnBM,C,CAqBP;;AACA,OAAO,MAAMM,cAAc,GAAGZ,UAAU,IAAI;AACxC,SAAO;AACHU,IAAAA,IAAI,EAAEhB,cADH;AAEHiB,IAAAA,OAAO,EAAEX;AAFN,GAAP;AAIH,CALM","sourcesContent":["import request from 'request';\nimport serverConf from '../config'\nimport { GET_ERRORS, SET_VOLUNTEERS} from './types';\n\n// get volunteers from database\nexport const getVolunteers = dispatch => {\n\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.volunteers.fetch}`;\n\n    request.get(endpoint, (error, response, body) => {\n        \n        const res = JSON.parse(body);\n\n        if (error || !res.token) {\n            dispatch({\n                type: GET_ERRORS,\n                payload: res\n              })\n        }\n        else {\n            // set current volunteers\n            dispatch(getVolunteers(res))\n        }    \n    });\n};\n\n// set volunteers\nexport const setCurrentUser = volunteers => {\n    return {\n        type: SET_VOLUNTEERS,\n        payload: volunteers\n    };\n};\n"]},"metadata":{},"sourceType":"module"}