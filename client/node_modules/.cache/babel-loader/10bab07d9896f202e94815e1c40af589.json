{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/vas/client/src/components/Volunteers/VolunteerList.js\";\nimport React, { Component, Fragment } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue, blueGrey } from '@material-ui/core/colors';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport isEmpty from 'is-empty';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getVolunteers } from \"../../actions/volunteerActions\";\nimport VolunteerInfo from './VolunteerInfo';\nimport AddVolunteerDialog from './AddVolunteerDialog';\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  }\n});\nconst useStyles = {\n  button: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    alignSelf: 'center',\n    backgroundColor: blueGrey[700],\n    color: \"white\",\n    fontWeight: \"bold\",\n    '&:hover': {\n      backgroundColor: blue[500]\n    },\n    width: \"70px\",\n    \"&:disabled\": {\n      backgroundColor: blueGrey[100],\n      color: \"white\"\n    }\n  }\n};\n\nclass VolunteerList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderVolunteers = () => {\n      let list;\n      list = this.props.volunteers.map(volunteer => {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(VolunteerInfo, {\n          key: volunteer._id,\n          info: volunteer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      });\n      return list;\n    };\n\n    this.state = {\n      addVolunteerDialog: false\n    };\n    this.renderVolunteers = this.renderVolunteers.bind(this);\n    this.toggleAddVolunteerDialog = this.toggleAddVolunteerDialog.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getVolunteers();\n  } // this function returns a new VolunteerInfo compononet for each volunteer \n\n\n  toggleAddVolunteerDialog() {\n    this.setState(prevState => ({\n      addVolunteerDialog: !prevState.addVolunteerDialog\n    }));\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, isEmpty(this.props.volunteers) ? '' : this.renderVolunteers()), React.createElement(Button, {\n      className: this.props.classes.button,\n      size: \"small\",\n      onClick: this.toggleAddVolunteerDialog,\n      endIcon: React.createElement(AddCircleOutlineIcon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"ADD\"), this.state.addVolunteerDialog && React.createElement(AddVolunteerDialog, {\n      open: this.state.addVolunteerDialog,\n      close: this.toggleAddVolunteerDialog,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }));\n  }\n\n}\n\nVolunteerList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  getVolunteers: PropTypes.func.isRequired,\n  volunteers: PropTypes.array.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  volunteers: state.data.volunteers,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getVolunteers\n})(withRouter(withStyles(useStyles)(VolunteerList)));","map":{"version":3,"sources":["/Users/daniel/Desktop/vas/client/src/components/Volunteers/VolunteerList.js"],"names":["React","Component","Fragment","createMuiTheme","withStyles","blue","blueGrey","AddCircleOutlineIcon","isEmpty","List","Divider","Button","PropTypes","withRouter","connect","getVolunteers","VolunteerInfo","AddVolunteerDialog","theme","palette","primary","useStyles","button","marginTop","spacing","display","alignSelf","backgroundColor","color","fontWeight","width","VolunteerList","constructor","props","renderVolunteers","list","volunteers","map","volunteer","_id","state","addVolunteerDialog","bind","toggleAddVolunteerDialog","componentDidMount","setState","prevState","render","classes","propTypes","object","isRequired","func","array","errors","mapStateToProps","data"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue, blueGrey } from '@material-ui/core/colors';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport isEmpty from 'is-empty';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getVolunteers } from \"../../actions/volunteerActions\";\nimport VolunteerInfo from './VolunteerInfo'\nimport AddVolunteerDialog from './AddVolunteerDialog';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    }\n});\n\nconst useStyles = {\n    button: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        alignSelf: 'center',\n        backgroundColor: blueGrey[700],\n        color: \"white\",\n        fontWeight: \"bold\",\n        '&:hover': {\n            backgroundColor: blue[500],\n        },\n        width: \"70px\",\n        \"&:disabled\": {\n            backgroundColor: blueGrey[100],\n            color: \"white\",\n          }\n    },\n    \n};\n\n\nclass VolunteerList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            addVolunteerDialog: false\n        }\n\n        this.renderVolunteers = this.renderVolunteers.bind(this);\n        this.toggleAddVolunteerDialog= this.toggleAddVolunteerDialog.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getVolunteers();\n    }\n   \n    // this function returns a new VolunteerInfo compononet for each volunteer \n    renderVolunteers = () => {\n\n        let list\n\n        list = this.props.volunteers.map(\n            (volunteer) => {\n                return (\n                    <Fragment>\n                        <VolunteerInfo key={volunteer._id} info={volunteer}/>\n                        <Divider/>\n                    </Fragment>    \n                )    \n            }\n        );\n\n        return list\n    }\n\n    toggleAddVolunteerDialog() {\n        this.setState(prevState => ({\n            addVolunteerDialog: !prevState.addVolunteerDialog\n        }));\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <List>\n                    {isEmpty(this.props.volunteers) ? '' : this.renderVolunteers()}\n                </List>\n\n                <Button \n                className={this.props.classes.button} \n                size='small'\n                onClick={this.toggleAddVolunteerDialog}\n                endIcon={<AddCircleOutlineIcon/>}>\n                    ADD\n                </Button>    \n\n                {this.state.addVolunteerDialog && <AddVolunteerDialog open={this.state.addVolunteerDialog} close={this.toggleAddVolunteerDialog}/>}\n\n            </Fragment>\n        );\n    }\n}\n\nVolunteerList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    getVolunteers: PropTypes.func.isRequired,\n    volunteers: PropTypes.array.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n\nconst mapStateToProps = state => ({\n    volunteers: state.data.volunteers,\n    errors: state.errors\n  });\n\nexport default connect (\n    mapStateToProps,\n    { getVolunteers }  \n)(withRouter(withStyles(useStyles)(VolunteerList)));"]},"metadata":{},"sourceType":"module"}