{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/vas/client/src/components/Volunteers/VolunteerList.js\";\nimport React, { Component, Fragment } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue, blueGrey } from '@material-ui/core/colors';\nimport isEmpty from 'is-empty';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getVolunteers } from \"../../actions/getData\";\nimport VolunteerInfo from './VolunteerInfo';\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  }\n});\nconst useStyles = {\n  all: {\n    backgroundColor: '#fafafa',\n    height: '100vh'\n  },\n  button: {\n    marginTop: theme.spacing(1),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginBottom: 10,\n    size: 'small'\n  }\n};\n\nclass VolunteerList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderVolunteers = () => {\n      let list;\n      list = this.props.volunteers.map(volunteer => {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(VolunteerInfo, {\n          key: volunteer._id,\n          info: volunteer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      });\n      return list;\n    };\n\n    this.state = {};\n    this.renderVolunteers = this.renderVolunteers.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getVolunteers();\n  } // this function returns a new VolunteerInfo compononet for each volunteer \n\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Volunteer List\"), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, isEmpty(this.props.volunteers) ? '' : this.renderVolunteers()), React.createElement(Button, {\n      className: this.props.classes.button,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }));\n  }\n\n}\n\nVolunteerList.propTypes = {\n  classes: PropTypes.object.isRequired,\n  getVolunteers: PropTypes.func.isRequired,\n  volunteers: PropTypes.array.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  volunteers: state.data.volunteers,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getVolunteers\n})(withRouter(withStyles(useStyles)(VolunteerList)));","map":{"version":3,"sources":["/Users/daniel/Desktop/vas/client/src/components/Volunteers/VolunteerList.js"],"names":["React","Component","Fragment","createMuiTheme","withStyles","blue","blueGrey","isEmpty","List","Divider","Button","PropTypes","withRouter","connect","getVolunteers","VolunteerInfo","theme","palette","primary","useStyles","all","backgroundColor","height","button","marginTop","spacing","display","flexDirection","alignItems","marginBottom","size","VolunteerList","constructor","props","renderVolunteers","list","volunteers","map","volunteer","_id","state","bind","componentDidMount","render","classes","propTypes","object","isRequired","func","array","errors","mapStateToProps","data"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport { blue, blueGrey } from '@material-ui/core/colors';\nimport isEmpty from 'is-empty';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getVolunteers } from \"../../actions/getData\";\nimport VolunteerInfo from './VolunteerInfo'\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: blue,\n    }\n});\n\nconst useStyles = {\n    all: {\n        backgroundColor: '#fafafa',\n        height: '100vh'\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginBottom: 10,\n        size: 'small',\n    },\n    \n};\n\n\nclass VolunteerList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n\n        this.renderVolunteers = this.renderVolunteers.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getVolunteers();\n    }\n   \n    // this function returns a new VolunteerInfo compononet for each volunteer \n    renderVolunteers = () => {\n\n        let list\n\n        list = this.props.volunteers.map(\n            (volunteer) => {\n                return (\n                    <Fragment>\n                        <VolunteerInfo key={volunteer._id} info={volunteer}/>\n                        <Divider/>\n                    </Fragment>    \n                )    \n            }\n        );\n\n        return list\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h3>Volunteer List</h3>\n                <List>\n                    {isEmpty(this.props.volunteers) ? '' : this.renderVolunteers()}\n                </List>\n\n                <Button className={this.props.classes.button}/>\n            </Fragment>\n        );\n    }\n}\n\nVolunteerList.propTypes = {\n    classes: PropTypes.object.isRequired,\n    getVolunteers: PropTypes.func.isRequired,\n    volunteers: PropTypes.array.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n\nconst mapStateToProps = state => ({\n    volunteers: state.data.volunteers,\n    errors: state.errors\n  });\n\nexport default connect (\n    mapStateToProps,\n    { getVolunteers }  \n)(withRouter(withStyles(useStyles)(VolunteerList)));"]},"metadata":{},"sourceType":"module"}