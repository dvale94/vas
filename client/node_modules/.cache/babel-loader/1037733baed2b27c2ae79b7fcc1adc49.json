{"ast":null,"code":"import request from 'request';\nimport serverConf from '../config';\n\nclass ApiProvider {\n  constructor() {\n    this._initialize();\n  }\n\n  _initialize() {\n    this._filterGetters = {\n      \"Title\": this._partial(this.getBooks, {\n        fields: [\"title\"]\n      }),\n      \"Genre\": this._partial(this.getGenres, {\n        fields: [\"name\"]\n      }),\n      \"Author\": this._partial(this.getAuthors, {\n        fields: [\"name\"]\n      })\n    };\n  }\n\n  filterGetters() {\n    return this._filterGetters;\n  }\n\n  getBooks(options, callback, errorCallback) {\n    let endpoint = `${serverConf.uri}${serverConf.endpoints.books.fetch}`;\n\n    if (Object.keys(options).length > 0) {\n      endpoint += '?';\n      endpoint += options.fields && Array.isArray(options.fields) ? `&fields=${options.fields.join(',')}` : '';\n      endpoint += options.title ? `&title=${options.title}` : '';\n      endpoint += options.genre ? `&genre=${options.genre}` : '';\n      endpoint += options.authors ? `&authors=${options.authors}` : '';\n      endpoint += options.limit ? `&limit=${options.limit}` : '';\n      endpoint += options.skip ? `&skip=${options.skip}` : '';\n    }\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getGenres(options, callback, errorCallback) {\n    let endpoint = `${serverConf.uri}${serverConf.endpoints.genres.fetch}`;\n\n    if (Object.keys(options).length > 0) {\n      endpoint += '?';\n      endpoint += options.fields && Array.isArray(options.fields) ? `fields=${options.fields.join(',')}` : '';\n    }\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getAuthors(options, callback, errorCallback) {\n    let endpoint = `${serverConf.uri}${serverConf.endpoints.authors.fetch}`;\n\n    if (Object.keys(options).length > 0) {\n      endpoint += '?';\n      endpoint += options.fields && Array.isArray(options.fields) ? `fields=${options.fields.join(',')}` : '';\n    }\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getMedia(options, callback, errorCallback) {\n    let endpoint = `${serverConf.uri}${serverConf.endpoints.media.fetch}`;\n    endpoint += options.id ? `/${options.id}` : '';\n\n    if (Object.keys(options).length > 0) {\n      endpoint += '?';\n      endpoint += options.fields && Array.isArray(options.fields) ? `fields=${options.fields.join(',')}` : '';\n    }\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getAuthorById(id, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.authors.fetch}/${id}`;\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getBookById(id, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.books.fetch}/${id}`;\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getGenreById(id, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.genres.fetch}/${id}`;\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getTopSellers(options, callback, errorCallback) {\n    let endpoint = `${serverConf.uri}${serverConf.endpoints.books.fetch}/top-sellers`;\n    endpoint += '?';\n    endpoint += options.limit ? `limit=${options.limit}` : '';\n    endpoint += options.skip ? `&skip=${options.skip}` : '';\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getTopRated(options, callback, errorCallback) {\n    let endpoint = `${serverConf.uri}${serverConf.endpoints.books.fetch}/top-rated`;\n    endpoint += '?';\n    endpoint += options.limit ? `limit=${options.limit}` : '';\n    endpoint += options.skip ? `&skip=${options.skip}` : '';\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getBookTitles(callback, errorCallback) {}\n\n  getBookRatings(bookId, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.ratings.fetch}/${bookId}`;\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  createUser(form, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.users.register}`;\n    request.post(endpoint, {\n      form\n    }, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      if (callback) callback(body);\n    });\n  }\n\n  logIn(form, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.users.login}`;\n    request.post(endpoint, {\n      form\n    }, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      if (callback) callback(body);\n    });\n  }\n\n  getUserById(id, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.users.fetch}/${id}`;\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getAddressById(id, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.addresses.fetch}/${id}`;\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  getCardById(id, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.creditCards.fetch}/${id}`;\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  updateAddress(id, form, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.addresses.update}/${id}`;\n    request.post(endpoint, {\n      form\n    }, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      if (callback) callback(body);\n    });\n  }\n\n  updateCard(id, form, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.creditCards.update}/${id}`;\n    request.post(endpoint, {\n      form\n    }, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      if (callback) callback(body);\n    });\n  }\n\n  updateUser(id, form, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.users.update}/${id}`;\n    request.post(endpoint, {\n      form\n    }, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      if (callback) callback(body);\n    });\n  } //the extra key \"action\" must be included in the update field with shipping_addresses so the server knows it is adding to the db array\n\n\n  createAddress(userId, type, form, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}/${serverConf.endpoints.addresses.create}`;\n    request.post(endpoint, {\n      form\n    }, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      let data = JSON.parse(body);\n\n      if (data.success) {\n        if (type === \"shipping\") {\n          this.updateUser(userId, {\n            action: \"add\",\n            shipping_addresses: data.results._id\n          }, reply => {\n            if (callback) callback(reply);\n          });\n        } else if (type === \"home\") {\n          this.updateUser(userId, {\n            address: data.results._id\n          }, reply => {\n            if (callback) callback(reply);\n          });\n        }\n      } else {\n        if (callback) callback(body);\n      }\n    });\n  } //the extra key \"action\" must be included in the update field with credit_cards so the server knows it is adding to the db array\n\n\n  createCard(userId, form, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.creditCards.create}`;\n    request.post(endpoint, {\n      form\n    }, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      let data = JSON.parse(body);\n\n      if (data.success) {\n        this.updateUser(userId, {\n          action: \"add\",\n          credit_cards: data.results._id\n        }, reply => {\n          if (callback) callback(reply);\n        });\n      } else {\n        if (callback) callback(body);\n      }\n    });\n  } //the extra key \"action\" must be included in the update field with shipping_addresses so the server knows it is removing from the db array\n\n\n  deleteAddressById(userId, addressId, type, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}/${serverConf.endpoints.addresses.remove}/${addressId}`;\n    request.post(endpoint, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      let data = JSON.parse(body);\n\n      if (data.success) {\n        if (type === \"shipping\") {\n          this.updateUser(userId, {\n            action: \"remove\",\n            shipping_addresses: addressId\n          }, reply => {\n            if (callback) callback(reply);\n          });\n        } else if (type === \"home\") {\n          this.updateUser(userId, {\n            action: \"remove\",\n            address: \"\"\n          }, reply => {\n            if (callback) callback(reply);\n          });\n        }\n      } else {\n        if (callback) callback(body);\n      }\n    });\n  } //the extra key \"action\" must be included in the update field with credit_cards so the server knows it is removing from the db array\n\n\n  deleteCardById(userId, cardId, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}/${serverConf.endpoints.creditCards.remove}/${cardId}`;\n    request.post(endpoint, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      let data = JSON.parse(body);\n\n      if (data.success) {\n        this.updateUser(userId, {\n          action: \"remove\",\n          credit_cards: cardId\n        }, reply => {\n          if (callback) callback(reply);\n        });\n      } else {\n        if (callback) callback(body);\n      }\n    });\n  }\n\n  _fetch(endpoint, callback, errorCallback) {\n    request(endpoint, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      if (callback) callback(body);\n    });\n  }\n\n  _partial(func, ...argsBound) {\n    return function (...args) {\n      return func.call(this, ...argsBound, ...args);\n    };\n  }\n\n  createShoppingCart(callback, errorCallback) {\n    const endpoint = `${serverConf.uri}/${serverConf.endpoints.carts.create}`;\n    request.post(endpoint, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      if (callback) callback(body);\n    });\n  }\n\n  getShoppingCartById(id, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}/${serverConf.endpoints.carts.fetch}/${id}`;\n\n    this._fetch(endpoint, callback, errorCallback);\n  }\n\n  updateCart(id, form, callback, errorCallback) {\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.carts.update}/${id}`;\n    request.post(endpoint, {\n      form\n    }, (error, response, body) => {\n      if (error && errorCallback) errorCallback(error);\n      if (callback) callback(body);\n    });\n  }\n\n}\n\nexport const api = new ApiProvider();","map":{"version":3,"sources":["/Users/aurelienmeray/Desktop/OG/vas/client/src/api/ApiProvider.js"],"names":["request","serverConf","ApiProvider","constructor","_initialize","_filterGetters","_partial","getBooks","fields","getGenres","getAuthors","filterGetters","options","callback","errorCallback","endpoint","uri","endpoints","books","fetch","Object","keys","length","Array","isArray","join","title","genre","authors","limit","skip","_fetch","genres","getMedia","media","id","getAuthorById","getBookById","getGenreById","getTopSellers","getTopRated","getBookTitles","getBookRatings","bookId","ratings","createUser","form","users","register","post","error","response","body","logIn","login","getUserById","getAddressById","addresses","getCardById","creditCards","updateAddress","update","updateCard","updateUser","createAddress","userId","type","create","data","JSON","parse","success","action","shipping_addresses","results","_id","reply","address","createCard","credit_cards","deleteAddressById","addressId","remove","deleteCardById","cardId","func","argsBound","args","call","createShoppingCart","carts","getShoppingCartById","updateCart","api"],"mappings":"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","sourcesContent":["import request from 'request';\nimport serverConf from '../config';\n\nclass ApiProvider {\n\tconstructor() {\n\t\tthis._initialize();\n\t}\n\n\t_initialize() {\n\t\tthis._filterGetters = {\n\t\t\t\"Title\": this._partial(this.getBooks, { fields: [\"title\"] }),\n\t\t\t\"Genre\": this._partial(this.getGenres, { fields: [\"name\"] }),\n\t\t\t\"Author\": this._partial(this.getAuthors, { fields: [\"name\"] })\n\t\t};\n\t}\n\n\tfilterGetters() {\n\t\treturn this._filterGetters;\n\t}\n\n\tgetBooks(options, callback, errorCallback) {\n\t\tlet endpoint = `${serverConf.uri}${serverConf.endpoints.books.fetch}`;\n\t\tif (Object.keys(options).length > 0) {\n\t\t\tendpoint += '?';\n\t\t\tendpoint += options.fields && Array.isArray(options.fields) ? `&fields=${options.fields.join(',')}` : '';\n\t\t\tendpoint += options.title ? `&title=${options.title}` : '';\n\t\t\tendpoint += options.genre ? `&genre=${options.genre}` : '';\n\t\t\tendpoint += options.authors ? `&authors=${options.authors}` : '';\n\t\t\tendpoint += options.limit ? `&limit=${options.limit}` : '';\n\t\t\tendpoint += options.skip ? `&skip=${options.skip}` : '';\n\t\t}\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetGenres(options, callback, errorCallback) {\n\t\tlet endpoint = `${serverConf.uri}${serverConf.endpoints.genres.fetch}`;\n\t\tif (Object.keys(options).length > 0) {\n\t\t\tendpoint += '?';\n\t\t\tendpoint += options.fields && Array.isArray(options.fields) ? `fields=${options.fields.join(',')}` : '';\n\t\t}\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetAuthors(options, callback, errorCallback) {\n\t\tlet endpoint = `${serverConf.uri}${serverConf.endpoints.authors.fetch}`;\n\t\tif (Object.keys(options).length > 0) {\n\t\t\tendpoint += '?';\n\t\t\tendpoint += options.fields && Array.isArray(options.fields) ? `fields=${options.fields.join(',')}` : '';\n\t\t}\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetMedia(options, callback, errorCallback) {\n\t\tlet endpoint = `${serverConf.uri}${serverConf.endpoints.media.fetch}`;\n\t\tendpoint += options.id ? `/${options.id}` : '';\n\t\tif (Object.keys(options).length > 0) {\n\t\t\tendpoint += '?';\n\t\t\tendpoint += options.fields && Array.isArray(options.fields) ? `fields=${options.fields.join(',')}` : '';\n\t\t}\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetAuthorById(id, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.authors.fetch}/${id}`;\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetBookById(id, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.books.fetch}/${id}`;\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetGenreById(id, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.genres.fetch}/${id}`;\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetTopSellers(options, callback, errorCallback) {\n\t\tlet endpoint = `${serverConf.uri}${serverConf.endpoints.books.fetch}/top-sellers`;\n\t\tendpoint += '?';\n\t\tendpoint += options.limit ? `limit=${options.limit}` : '';\n\t\tendpoint += options.skip ? `&skip=${options.skip}` : '';\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetTopRated(options, callback, errorCallback) {\n\t\tlet endpoint = `${serverConf.uri}${serverConf.endpoints.books.fetch}/top-rated`;\n\t\tendpoint += '?';\n\t\tendpoint += options.limit ? `limit=${options.limit}` : '';\n\t\tendpoint += options.skip ? `&skip=${options.skip}` : '';\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetBookTitles(callback, errorCallback) {\n\n\t}\n\n\tgetBookRatings(bookId, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.ratings.fetch}/${bookId}`;\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tcreateUser(form, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.users.register}`;\n\n\t\trequest.post(endpoint, { form }, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tif (callback) callback(body);\n\t\t});\n\t}\n\n\tlogIn(form, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.users.login}`;\n\n\t\trequest.post(endpoint, { form }, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tif (callback) callback(body);\n\t\t});\n\t}\n\n\tgetUserById(id, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.users.fetch}/${id}`;\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetAddressById(id, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.addresses.fetch}/${id}`;\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tgetCardById(id, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.creditCards.fetch}/${id}`;\n\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tupdateAddress(id, form, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.addresses.update}/${id}`;\n\n\t\trequest.post(endpoint, { form }, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tif (callback) callback(body);\n\t\t});\n\t}\n\n\tupdateCard(id, form, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.creditCards.update}/${id}`;\n\n\t\trequest.post(endpoint, { form }, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tif (callback) callback(body);\n\t\t});\n\t}\n\n\tupdateUser(id, form, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.users.update}/${id}`;\n\n\t\trequest.post(endpoint, { form }, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tif (callback) callback(body);\n\t\t});\n\t}\n\n\t//the extra key \"action\" must be included in the update field with shipping_addresses so the server knows it is adding to the db array\n\tcreateAddress(userId, type, form, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}/${serverConf.endpoints.addresses.create}`;\n\n\t\trequest.post(endpoint, { form }, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tlet data = JSON.parse(body);\n\t\t\tif (data.success) {\n\t\t\t\tif (type === \"shipping\") {\n\t\t\t\t\tthis.updateUser(userId, { action: \"add\", shipping_addresses: data.results._id }, (reply) => {\n\t\t\t\t\t\tif (callback) callback(reply)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse if (type === \"home\") {\n\t\t\t\t\tthis.updateUser(userId, { address: data.results._id }, (reply) => {\n\t\t\t\t\t\tif (callback) callback(reply)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (callback) callback(body);\n\t\t\t}\n\t\t});\n\t}\n\n\t//the extra key \"action\" must be included in the update field with credit_cards so the server knows it is adding to the db array\n\tcreateCard(userId, form, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.creditCards.create}`;\n\n\t\trequest.post(endpoint, { form }, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tlet data = JSON.parse(body);\n\t\t\tif (data.success) {\n\t\t\t\tthis.updateUser(userId, { action: \"add\", credit_cards: data.results._id }, (reply) => {\n\t\t\t\t\tif (callback) callback(reply)\n\t\t\t\t})\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (callback) callback(body);\n\t\t\t}\n\n\t\t});\n\t}\n\n\t//the extra key \"action\" must be included in the update field with shipping_addresses so the server knows it is removing from the db array\n\tdeleteAddressById(userId, addressId, type, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}/${serverConf.endpoints.addresses.remove}/${addressId}`;\n\n\t\trequest.post(endpoint, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tlet data = JSON.parse(body);\n\t\t\tif (data.success) {\n\t\t\t\tif (type === \"shipping\") {\n\t\t\t\t\tthis.updateUser(userId, { action: \"remove\", shipping_addresses: addressId }, (reply) => {\n\t\t\t\t\t\tif (callback) callback(reply)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse if (type === \"home\") {\n\t\t\t\t\tthis.updateUser(userId, { action: \"remove\", address: \"\" }, (reply) => {\n\t\t\t\t\t\tif (callback) callback(reply)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (callback) callback(body);\n\t\t\t}\n\t\t});\n\t}\n\n\t//the extra key \"action\" must be included in the update field with credit_cards so the server knows it is removing from the db array\n\tdeleteCardById(userId, cardId, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}/${serverConf.endpoints.creditCards.remove}/${cardId}`;\n\n\t\trequest.post(endpoint, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tlet data = JSON.parse(body);\n\t\t\tif (data.success) {\n\t\t\t\tthis.updateUser(userId, { action: \"remove\", credit_cards: cardId }, (reply) => {\n\t\t\t\t\tif (callback) callback(reply)\n\t\t\t\t});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif (callback) callback(body);\n\t\t\t}\n\t\t});\n\t}\n\n\t_fetch(endpoint, callback, errorCallback) {\n\t\trequest(endpoint, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tif (callback) callback(body);\n\t\t});\n\t}\n\n\t_partial(func, ...argsBound) {\n\t\treturn function (...args) {\n\t\t\treturn func.call(this, ...argsBound, ...args);\n\t\t};\n\t}\n\n\tcreateShoppingCart(callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}/${serverConf.endpoints.carts.create}`;\n\n\t\trequest.post(endpoint, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tif (callback) callback(body);\n\t\t});\n\t}\n\n\tgetShoppingCartById(id, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}/${serverConf.endpoints.carts.fetch}/${id}`;\n\t\tthis._fetch(endpoint, callback, errorCallback);\n\t}\n\n\tupdateCart(id, form, callback, errorCallback) {\n\t\tconst endpoint = `${serverConf.uri}${serverConf.endpoints.carts.update}/${id}`;\n\n\t\trequest.post(endpoint, { form }, (error, response, body) => {\n\t\t\tif (error && errorCallback) errorCallback(error);\n\t\t\tif (callback) callback(body);\n\t\t});\n\t}\n\n}\n\nexport const api = new ApiProvider();\n"]},"metadata":{},"sourceType":"module"}