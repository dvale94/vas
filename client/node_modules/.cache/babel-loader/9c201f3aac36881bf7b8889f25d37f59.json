{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/vas/client/src/components/Volunteers/VolunteerList.js\";\nimport React, { Component, Fragment } from 'react';\nimport List from '@material-ui/core/List';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getVolunteers } from \"../../actions/getData\";\nimport VolunteerInfo from './VolunteerInfo';\n\nclass VolunteerList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderVolunteers = () => {\n      let volunteers;\n      volunteers = this.props.volunteers.map(volunteer => {\n        return React.createElement(VolunteerInfo, {\n          key: volunteer.id,\n          info: volunteer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      });\n      return volunteers;\n    };\n\n    this.state = {};\n    this.renderVolunteers = this.renderVolunteers.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.dispatch(getVolunteers());\n  } //Supress depricated warning use UNSAFE_\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.volunteers) {\n      // push user to dashboard when they login\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Volunteer List\"), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.renderVolunteers()));\n  }\n\n}\n\nVolunteerList.propTypes = {\n  getVolunteers: PropTypes.func.isRequired,\n  volunteers: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  volunteers: state.volunteers,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getVolunteers\n})(withRouter(VolunteerList));","map":{"version":3,"sources":["/Users/daniel/Desktop/vas/client/src/components/Volunteers/VolunteerList.js"],"names":["React","Component","Fragment","List","PropTypes","withRouter","connect","getVolunteers","VolunteerInfo","VolunteerList","constructor","props","renderVolunteers","volunteers","map","volunteer","id","state","bind","componentDidMount","dispatch","UNSAFE_componentWillReceiveProps","nextProps","history","push","errors","setState","render","propTypes","func","isRequired","object","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,aAAN,SAA4BR,SAA5B,CAAsC;AAElCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAyBnBC,gBAzBmB,GAyBA,MAAI;AACnB,UAAIC,UAAJ;AAEAA,MAAAA,UAAU,GAAG,KAAKF,KAAL,CAAWE,UAAX,CAAsBC,GAAtB,CACRC,SAAD,IAAa;AACT,eAAO,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAEA,SAAS,CAACC,EAA9B;AAAkC,UAAA,IAAI,EAAED,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,OAHQ,CAAb;AAMA,aAAOF,UAAP;AACH,KAnCkB;;AAEf,SAAKI,KAAL,GAAa,EAAb;AAGA,SAAKL,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBM,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,KAAL,CAAWS,QAAX,CAAoBb,aAAa,EAAjC;AACH,GAZiC,CAclC;;;AACAc,EAAAA,gCAAgC,CAACC,SAAD,EAAY;AACxC,QAAIA,SAAS,CAACT,UAAd,EAA0B;AAC1B;AACA,WAAKF,KAAL,CAAWY,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACC;;AACD,QAAIF,SAAS,CAACG,MAAd,EAAsB;AACtB,WAAKC,QAAL,CAAc;AACVD,QAAAA,MAAM,EAAEH,SAAS,CAACG;AADR,OAAd;AAGC;AACJ;;AAcDE,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKf,gBAAL,EADL,CAFJ,CADJ;AAQH;;AAhDiC;;AAmDtCH,aAAa,CAACmB,SAAd,GAA0B;AACtBrB,EAAAA,aAAa,EAAEH,SAAS,CAACyB,IAAV,CAAeC,UADR;AAEtBjB,EAAAA,UAAU,EAAET,SAAS,CAAC2B,MAAV,CAAiBD,UAFP;AAGtBL,EAAAA,MAAM,EAAErB,SAAS,CAAC2B,MAAV,CAAiBD;AAHH,CAA1B;;AAMA,MAAME,eAAe,GAAGf,KAAK,KAAK;AAC9BJ,EAAAA,UAAU,EAAEI,KAAK,CAACJ,UADY;AAE9BY,EAAAA,MAAM,EAAER,KAAK,CAACQ;AAFgB,CAAL,CAA7B;;AAKA,eAAenB,OAAO,CAClB0B,eADkB,EAElB;AAAEzB,EAAAA;AAAF,CAFkB,CAAP,CAGbF,UAAU,CAACI,aAAD,CAHG,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport List from '@material-ui/core/List';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getVolunteers } from \"../../actions/getData\";\nimport VolunteerInfo from './VolunteerInfo'\n\n\nclass VolunteerList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n\n        this.renderVolunteers = this.renderVolunteers.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.dispatch(getVolunteers());\n    }\n\n    //Supress depricated warning use UNSAFE_\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.volunteers) {\n        // push user to dashboard when they login\n        this.props.history.push(\"/dashboard\"); \n        }\n        if (nextProps.errors) {\n        this.setState({\n            errors: nextProps.errors\n        });\n        }\n    }\n\n    renderVolunteers = ()=>{\n        let volunteers;\n    \n        volunteers = this.props.volunteers.map(\n            (volunteer)=>{\n                return <VolunteerInfo key={volunteer.id} info={volunteer}/>\n            }\n        )\n         \n        return volunteers\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h3>Volunteer List</h3>\n                <List>\n                    {this.renderVolunteers()}\n                </List>\n            </Fragment>\n        );\n    }\n}\n\nVolunteerList.propTypes = {\n    getVolunteers: PropTypes.func.isRequired,\n    volunteers: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n\nconst mapStateToProps = state => ({\n    volunteers: state.volunteers,\n    errors: state.errors\n  });\n\nexport default connect (\n    mapStateToProps,\n    { getVolunteers }  \n)(withRouter(VolunteerList));"]},"metadata":{},"sourceType":"module"}