{"ast":null,"code":"import request from 'request';\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    request.defaults({\n      headers: {\n        Authorization: token\n      }\n    });\n  } else {// Delete auth header\n    // ERROR is i leave this and Logout\n    //delete request.headers.Authorization\n  }\n};\n\nexport default setAuthToken;","map":{"version":3,"sources":["/Users/aurelienmeray/Desktop/OG/vas/client/src/utils/setAuthToken.js"],"names":["request","setAuthToken","token","defaults","headers","Authorization"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;;AAEA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAC5B,MAAIA,KAAJ,EAAW;AACT;AACAF,IAAAA,OAAO,CAACG,QAAR,CAAiB;AACbC,MAAAA,OAAO,EAAE;AAACC,QAAAA,aAAa,EAAEH;AAAhB;AADI,KAAjB;AAGD,GALD,MAMK,CACH;AAEA;AACA;AACD;AACF,CAbD;;AAeA,eAAeD,YAAf","sourcesContent":["import request from 'request';\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    request.defaults({\n        headers: {Authorization: token}\n    })\n  } \n  else {\n    // Delete auth header\n\n    // ERROR is i leave this and Logout\n    //delete request.headers.Authorization\n  }\n};\n\nexport default setAuthToken;"]},"metadata":{},"sourceType":"module"}