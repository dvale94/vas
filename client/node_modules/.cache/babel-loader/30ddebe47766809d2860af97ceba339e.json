{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/vas/client/src/components/Login/LoginForm.js\";\nimport React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { blueGrey, blue } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport './LoginForm.css';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\"; // Login Styling\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  }\n});\nconst useStyles = {\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: blueGrey[500],\n    '&:hover': {\n      backgroundColor: blue[500]\n    }\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: blueGrey[700],\n    color: \"white\",\n    fontWeight: \"bold\",\n    '&:hover': {\n      backgroundColor: blue[500]\n    }\n  }\n}; // Login Styling END\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = e => {\n      const value = e.target.value;\n      const name = e.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submitLogin = async e => {\n      e.preventDefault();\n      const userData = {\n        email: this.state.email,\n        password: this.state.password\n      }; //redirect is handled within loginUser()\n\n      this.props.loginUser(userData);\n    };\n\n    this.inputError = error => {\n      return React.createElement(\"div\", {\n        className: \"logIn-input-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, error);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      submitted: false,\n      errors: {}\n    };\n  }\n\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push(\"/dashboard\");\n    }\n  } //Supress depricated warning use UNSAFE_\n\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      // push user to dashboard when they login\n      this.props.history.push(\"/dashboard\");\n    }\n\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  } // working on updating the UNSAFE_componentWillReceiveProps\n\n\n  static getDerivedStateFromProps(nextProps, prevState) {}\n\n  render() {\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: this.props.classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: this.props.classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(LockRoundedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"VAS Login\"), React.createElement(\"form\", {\n      className: this.props.classes.form,\n      onSubmit: this.submitLogin.bind(this),\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      color: \"primary\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      onChange: this.handleInput,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), this.state.errors.hasOwnProperty(\"email\") && this.inputError(this.state.errors.email), React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: this.handleInput,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), this.state.errors.hasOwnProperty(\"password\") && this.inputError(this.state.errors.password)), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      className: this.props.classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n} // define types\n\n\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}; // allows us to get our state from Redux and map it to props\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser\n})(withRouter(withStyles(useStyles)(LoginForm)));","map":{"version":3,"sources":["/Users/daniel/Desktop/vas/client/src/components/Login/LoginForm.js"],"names":["React","Component","Avatar","Button","CssBaseline","TextField","LockRoundedIcon","Typography","Container","blueGrey","blue","createMuiTheme","ThemeProvider","withStyles","PropTypes","withRouter","connect","loginUser","theme","palette","primary","useStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","color","fontWeight","LoginForm","constructor","props","handleInput","e","value","target","name","setState","submitLogin","preventDefault","userData","email","state","password","inputError","error","submitted","errors","componentDidMount","auth","isAuthenticated","history","push","UNSAFE_componentWillReceiveProps","nextProps","getDerivedStateFromProps","prevState","render","classes","bind","hasOwnProperty","propTypes","object","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { blueGrey, blue } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport './LoginForm.css';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\n\n\n\n// Login Styling\nconst theme = createMuiTheme({\n    palette: {\n      primary: blue,\n    }\n  });\n\nconst useStyles = {\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: blueGrey[500],\n    '&:hover': {\n        backgroundColor: blue[500],\n    }\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: blueGrey[700],\n    color: \"white\",\n    fontWeight: \"bold\",\n    '&:hover': {\n        backgroundColor: blue[500],\n    }\n  },\n};\n// Login Styling END\n\nclass LoginForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        email: '',\n        password: '',\n        submitted: false,\n        errors: {}\n        };\n    }  \n\n    componentDidMount() {\n      // If logged in and user navigates to Login page, should redirect them to dashboard\n        if (this.props.auth.isAuthenticated) {\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    //Supress depricated warning use UNSAFE_\n    UNSAFE_componentWillReceiveProps(nextProps) {\n        if (nextProps.auth.isAuthenticated) {\n        // push user to dashboard when they login\n        this.props.history.push(\"/dashboard\"); \n        }\n        if (nextProps.errors) {\n        this.setState({\n            errors: nextProps.errors\n        });\n        }\n    }\n\n    // working on updating the UNSAFE_componentWillReceiveProps\n    static getDerivedStateFromProps(nextProps, prevState){\n   }\n\n\n    handleInput = (e) =>{\n        const value = e.target.value\n        const name = e.target.name\n\n        this.setState({\n        [name]: value \n        })\n    }\n\n\n    submitLogin = async (e) =>{\n        e.preventDefault()\n\n        const userData = {\n        email: this.state.email,\n        password: this.state.password\n        };\n\n        //redirect is handled within loginUser()\n        this.props.loginUser(userData); \n    }\n\n    inputError = (error) => {\n        return (\n        <div className=\"logIn-input-message\">\n            {error}\n        </div>\n        )\n    };\n\n  render(){   \n    \n    return (\n      <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={this.props.classes.paper} >\n          <Avatar className={this.props.classes.avatar} >\n          <LockRoundedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            VAS Login\n          </Typography>\n          <form className={this.props.classes.form} onSubmit={this.submitLogin.bind(this)} noValidate>\n            <div>\n            <TextField\n              variant=\"outlined\"\n              color= \"primary\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={this.handleInput}\n              value={this.state.email}\n            />\n            {this.state.errors.hasOwnProperty(\"email\") && this.inputError(this.state.errors.email)}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.handleInput}\n              value={this.state.password}\n            />\n            {this.state.errors.hasOwnProperty(\"password\") && this.inputError(this.state.errors.password)}\n            </div>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={this.props.classes.submit}\n              \n            >\n              Login\n            </Button>\n          </form>\n        </div>\n      </Container>\n      </ThemeProvider>\n      \n    );\n  }\n}\n\n// define types\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\n// allows us to get our state from Redux and map it to props\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect (\n  mapStateToProps,\n  { loginUser }  \n)(withRouter(withStyles(useStyles)(LoginForm)));"]},"metadata":{},"sourceType":"module"}