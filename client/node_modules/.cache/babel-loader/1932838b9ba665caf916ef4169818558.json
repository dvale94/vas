{"ast":null,"code":"var _jsxFileName = \"/Users/aurelienmeray/Desktop/OG/vas/client/src/components/LoginForm.js\";\nimport React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { blueGrey, blue } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { api } from '../api/ApiProvider';\nimport './LoginForm.css'; // Login Styling\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  }\n});\nconst useStyles = {\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: blueGrey[500],\n    '&:hover': {\n      backgroundColor: blue[500]\n    }\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: blueGrey[700],\n    color: \"white\",\n    fontWeight: \"bold\",\n    '&:hover': {\n      backgroundColor: blue[500]\n    }\n  }\n}; // Login Styling END\n\nclass LoginForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInput = e => {\n      const value = e.target.value;\n      const name = e.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.submitLogin = async e => {\n      e.preventDefault();\n      api.login(this.state, result => {\n        let response = JSON.parse(result);\n        console.log(result);\n        console.log(response);\n        this.setState({\n          submitted: true,\n          server: response,\n          loginError: response\n        });\n\n        if (response.success) {\n          localStorage.setItem('token', response.token);\n        }\n      });\n    };\n\n    this.inputError = error => {\n      return React.createElement(\"div\", {\n        className: \"logIn-input-message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"^ \", error);\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      submitted: false,\n      loginError: '',\n      server: {}\n    };\n  }\n\n  render() {\n    return React.createElement(ThemeProvider, {\n      theme: theme,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: this.props.classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      className: this.props.classes.avatar,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(LockRoundedIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(Typography, {\n      component: \"h1\",\n      variant: \"h5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"VAS Login\"), React.createElement(\"form\", {\n      className: this.props.classes.form,\n      onSubmit: this.submitLogin.bind(this),\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      variant: \"outlined\",\n      color: \"primary\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      id: \"email\",\n      label: \"Email Address\",\n      name: \"email\",\n      autoComplete: \"email\",\n      autoFocus: true,\n      onChange: this.handleInput,\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), this.state.server.hasOwnProperty(\"email\") && this.inputError(this.state.server.email), React.createElement(TextField, {\n      variant: \"outlined\",\n      margin: \"normal\",\n      required: true,\n      fullWidth: true,\n      name: \"password\",\n      label: \"Password\",\n      type: \"password\",\n      id: \"password\",\n      autoComplete: \"current-password\",\n      onChange: this.handleInput,\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), this.state.server.hasOwnProperty(\"password\") && this.inputError(this.state.server.password)), React.createElement(Button, {\n      type: \"submit\",\n      fullWidth: true,\n      variant: \"contained\",\n      className: this.props.classes.submit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n}\n\nLoginForm.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(useStyles)(LoginForm);","map":{"version":3,"sources":["/Users/aurelienmeray/Desktop/OG/vas/client/src/components/LoginForm.js"],"names":["React","Component","Avatar","Button","CssBaseline","TextField","LockRoundedIcon","Typography","Container","blueGrey","blue","createMuiTheme","ThemeProvider","withStyles","PropTypes","api","theme","palette","primary","useStyles","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","form","width","submit","color","fontWeight","LoginForm","constructor","props","handleInput","e","value","target","name","setState","submitLogin","preventDefault","login","state","result","response","JSON","parse","console","log","submitted","server","loginError","success","localStorage","setItem","token","inputError","error","email","password","render","classes","bind","hasOwnProperty","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport LockRoundedIcon from '@material-ui/icons/LockRounded';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { blueGrey, blue } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport PropTypes from 'prop-types';\nimport { api } from '../api/ApiProvider'\nimport './LoginForm.css';\n\n\n// Login Styling\nconst theme = createMuiTheme({\n    palette: {\n      primary: blue,\n    }\n  });\n\nconst useStyles = {\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: blueGrey[500],\n    '&:hover': {\n        backgroundColor: blue[500],\n    }\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: blueGrey[700],\n    color: \"white\",\n    fontWeight: \"bold\",\n    '&:hover': {\n        backgroundColor: blue[500],\n    }\n  },\n};\n// Login Styling END\n\nclass LoginForm extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      submitted: false,\n      loginError: '',\n      server: {}\n    };\n  }  \n\n\n  handleInput = (e) =>{\n    const value = e.target.value\n    const name = e.target.name\n\n    this.setState({\n      [name]: value \n    })\n  }\n\n\n  submitLogin = async (e) =>{\n    e.preventDefault()\n\n    api.login(this.state, (result) => {\n      let response = JSON.parse(result);\n      console.log(result)\n      console.log(response)\n\n      this.setState(\n        {\n          submitted: true, \n          server: response,\n          loginError: response\n        }\n      )\n\n      if(response.success) {\n\n        localStorage.setItem('token', response.token)\n      }\n    });\n  }\n\n  inputError = (error) => {\n    return (\n      <div className=\"logIn-input-message\">\n          ^ {error}\n        </div>\n    )\n  };\n\n  render(){   \n    \n    return (\n      <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={this.props.classes.paper} >\n          <Avatar className={this.props.classes.avatar} >\n          <LockRoundedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            VAS Login\n          </Typography>\n          <form className={this.props.classes.form} onSubmit={this.submitLogin.bind(this)} noValidate>\n            <div>\n            <TextField\n              variant=\"outlined\"\n              color= \"primary\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={this.handleInput}\n              value={this.state.email}\n            />\n            {this.state.server.hasOwnProperty(\"email\") && this.inputError(this.state.server.email)}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={this.handleInput}\n              value={this.state.password}\n            />\n            {this.state.server.hasOwnProperty(\"password\") && this.inputError(this.state.server.password)}\n            </div>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              className={this.props.classes.submit}\n              \n            >\n              Login\n            </Button>\n          </form>\n        </div>\n      </Container>\n      </ThemeProvider>\n      \n    );\n  }\n}\n\nLoginForm.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\n\nexport default withStyles(useStyles)(LoginForm);"]},"metadata":{},"sourceType":"module"}