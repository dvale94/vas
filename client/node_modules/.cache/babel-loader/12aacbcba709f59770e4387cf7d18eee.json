{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/vas/client/src/components/Volunteers/VolunteerList.js\";\nimport React, { Component, Fragment } from 'react';\nimport isEmpty from 'is-empty';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getVolunteers } from \"../../actions/getData\";\nimport VolunteerInfo from './VolunteerInfo';\n\nclass VolunteerList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderVolunteers = () => {\n      let list;\n      list = this.props.volunteers.map(volunteer => {\n        return React.createElement(Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(VolunteerInfo, {\n          key: volunteer._id,\n          info: volunteer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), React.createElement(Divider, {\n          variant: \"middle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }));\n      });\n      return list;\n    };\n\n    this.state = {};\n    this.renderVolunteers = this.renderVolunteers.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.getVolunteers();\n  } // this function returns a new VolunteerInfo compononet for each volunteer \n\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Volunteer List\"), React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, isEmpty(this.props.volunteers) ? '' : this.renderVolunteers()));\n  }\n\n}\n\nVolunteerList.propTypes = {\n  getVolunteers: PropTypes.func.isRequired,\n  volunteers: PropTypes.array.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  volunteers: state.data.volunteers,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  getVolunteers\n})(withRouter(VolunteerList));","map":{"version":3,"sources":["/Users/daniel/Desktop/vas/client/src/components/Volunteers/VolunteerList.js"],"names":["React","Component","Fragment","isEmpty","List","Divider","PropTypes","withRouter","connect","getVolunteers","VolunteerInfo","VolunteerList","constructor","props","renderVolunteers","list","volunteers","map","volunteer","_id","state","bind","componentDidMount","render","propTypes","func","isRequired","array","errors","object","mapStateToProps","data"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,aAAN,SAA4BV,SAA5B,CAAsC;AAElCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAanBC,gBAbmB,GAaA,MAAM;AAErB,UAAIC,IAAJ;AAEAA,MAAAA,IAAI,GAAG,KAAKF,KAAL,CAAWG,UAAX,CAAsBC,GAAtB,CACFC,SAAD,IAAe;AACX,eACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,aAAD;AAAe,UAAA,GAAG,EAAEA,SAAS,CAACC,GAA9B;AAAmC,UAAA,IAAI,EAAED,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI,oBAAC,OAAD;AAAS,UAAA,OAAO,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAMH,OARE,CAAP;AAWA,aAAOH,IAAP;AACH,KA7BkB;;AAEf,SAAKK,KAAL,GAAa,EAAb;AAGA,SAAKN,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBO,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,KAAL,CAAWJ,aAAX;AACH,GAZiC,CAclC;;;AAmBAc,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKpB,OAAO,CAAC,KAAKU,KAAL,CAAWG,UAAZ,CAAP,GAAiC,EAAjC,GAAsC,KAAKF,gBAAL,EAD3C,CAFJ,CADJ;AAQH;;AA1CiC;;AA6CtCH,aAAa,CAACa,SAAd,GAA0B;AACtBf,EAAAA,aAAa,EAAEH,SAAS,CAACmB,IAAV,CAAeC,UADR;AAEtBV,EAAAA,UAAU,EAAEV,SAAS,CAACqB,KAAV,CAAgBD,UAFN;AAGtBE,EAAAA,MAAM,EAAEtB,SAAS,CAACuB,MAAV,CAAiBH;AAHH,CAA1B;;AAMA,MAAMI,eAAe,GAAGV,KAAK,KAAK;AAC9BJ,EAAAA,UAAU,EAAEI,KAAK,CAACW,IAAN,CAAWf,UADO;AAE9BY,EAAAA,MAAM,EAAER,KAAK,CAACQ;AAFgB,CAAL,CAA7B;;AAKA,eAAepB,OAAO,CAClBsB,eADkB,EAElB;AAAErB,EAAAA;AAAF,CAFkB,CAAP,CAGbF,UAAU,CAACI,aAAD,CAHG,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport isEmpty from 'is-empty';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { getVolunteers } from \"../../actions/getData\";\nimport VolunteerInfo from './VolunteerInfo'\n\n\nclass VolunteerList extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n        }\n\n        this.renderVolunteers = this.renderVolunteers.bind(this);\n    }\n\n    componentDidMount() {\n        this.props.getVolunteers();\n    }\n   \n    // this function returns a new VolunteerInfo compononet for each volunteer \n    renderVolunteers = () => {\n\n        let list\n\n        list = this.props.volunteers.map(\n            (volunteer) => {\n                return (\n                    <Fragment>\n                        <VolunteerInfo key={volunteer._id} info={volunteer}/>\n                        <Divider variant='middle'/>\n                    </Fragment>    \n                )    \n            }\n        );\n\n        return list\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <h3>Volunteer List</h3>\n                <List>\n                    {isEmpty(this.props.volunteers) ? '' : this.renderVolunteers()}\n                </List>\n            </Fragment>\n        );\n    }\n}\n\nVolunteerList.propTypes = {\n    getVolunteers: PropTypes.func.isRequired,\n    volunteers: PropTypes.array.isRequired,\n    errors: PropTypes.object.isRequired\n  };\n\nconst mapStateToProps = state => ({\n    volunteers: state.data.volunteers,\n    errors: state.errors\n  });\n\nexport default connect (\n    mapStateToProps,\n    { getVolunteers }  \n)(withRouter(VolunteerList));"]},"metadata":{},"sourceType":"module"}