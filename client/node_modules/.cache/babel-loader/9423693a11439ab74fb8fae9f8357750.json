{"ast":null,"code":"var _jsxFileName = \"/Users/aurelienmeray/Desktop/OG/vas/client/src/App.js\";\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Login from './pages/Login';\nimport NavBar from './components/NavBar/NavBar';\nimport Dashboard from './pages/Dashboard';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.forceUpdate = this.forceUpdate.bind(this);\n    this.checkLogIn = this.checkLogIn.bind(this);\n    this.state = {\n      loggedIn: false\n    };\n  }\n\n  componentDidMount() {\n    this.checkLogIn();\n  }\n\n  componentWillUpdate() {\n    this.checkLogIn();\n  } //if the user is already logged in.\n\n\n  checkLogIn() {\n    if (this.state.loggedIn && localStorage.getItem('token')) {\n      this.setState({\n        loggedIn: true\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(NavBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Route, {\n      path: \"/dashboard\",\n      component: Dashboard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default App;","map":{"version":3,"sources":["/Users/aurelienmeray/Desktop/OG/vas/client/src/App.js"],"names":["React","Component","Fragment","BrowserRouter","Router","Route","Switch","Redirect","Login","NavBar","Dashboard","PropTypes","App","constructor","props","forceUpdate","bind","checkLogIn","state","loggedIn","componentDidMount","componentWillUpdate","localStorage","getItem","setState","render","propTypes","classes","object","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAAgDC,QAAhD,QAA+D,kBAA/D;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,GAAN,SAAkBX,SAAlB,CAA4B;AAE1BY,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAGDC,EAAAA,iBAAiB,GAAG;AACpB,SAAKH,UAAL;AACA;;AAEDI,EAAAA,mBAAmB,GAAG;AACrB,SAAKJ,UAAL;AACA,GAhB0B,CAkB1B;;;AACAA,EAAAA,UAAU,GAAG;AACX,QAAI,KAAKC,KAAL,CAAWC,QAAX,IAAuBG,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA3B,EAA0D;AACxD,WAAKC,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGD;AACF;;AAEFM,EAAAA,MAAM,GAAG;AACR,WACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAUE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,EAWE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEf,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAXF,CADL,CADD;AAsBA;;AAlD0B;;AAsD5BE,GAAG,CAACc,SAAJ,GAAgB;AACfC,EAAAA,OAAO,EAAEhB,SAAS,CAACiB,MAAV,CAAiBC;AADX,CAAhB;AAIA,eAAejB,GAAf","sourcesContent":["import React,{Component,Fragment} from 'react';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom'\nimport './App.css';\nimport Login from './pages/Login'\nimport NavBar from './components/NavBar/NavBar';\nimport Dashboard from './pages/Dashboard';\nimport PropTypes from 'prop-types';\n\nclass App extends Component {\n\n  constructor (props) {\n    super(props);\n    this.forceUpdate = this.forceUpdate.bind(this);\n    this.checkLogIn = this.checkLogIn.bind(this);\n    this.state = { loggedIn: false}\n  }\n\n\n  componentDidMount() {\n\t\tthis.checkLogIn()\n\t}\n\n\tcomponentWillUpdate() {\n\t\tthis.checkLogIn()\n\t}\n\n  //if the user is already logged in.\n  checkLogIn() {\n    if (this.state.loggedIn && localStorage.getItem('token')) {\n      this.setState({\n        loggedIn: true\n      })\n    }\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"container\">\n        <Router>\n          {/* <Fragment>\n            <NavBar/>\n            <Redirect from=\"/\" to=\"/login\"/>\n            <Switch>\n              <Route path=\"/login\" component={Login} />\n              <Route path=\"/dashboard\" component={Dashboard}/>\n            </Switch>\n          </Fragment> */}\n          {/* <Redirect from=\"/\" to=\"/login\"/> */}\n          <NavBar/>\n          <Switch>\n            {/* <Route path=\"/login\" component={ () => <Login update={this.forceUpdate}/>} /> */}\n            <Route path=\"/dashboard\" component={Dashboard}/> \n          </Switch>\n          \n\n        </Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nApp.propTypes = {\n\tclasses: PropTypes.object.isRequired,\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}