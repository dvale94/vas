{"ast":null,"code":"import request from 'request';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport serverConf from '../config';\nimport { GET_ERRORS, UPDATE_USER } from './types';\nimport { loginUser } from './authActions';\nexport const updateAdmin = (id, form) => dispatch => {\n  const endpoint = `${serverConf.uri}${serverConf.endpoints.admin.update}/${id}`;\n  request.put(endpoint, {\n    form\n  }, (error, response, body) => {\n    const res = JSON.parse(body);\n\n    if (error) {\n      dispatch({\n        type: GET_ERRORS,\n        payload: res\n      });\n    } else {\n      // save token to localStorage\n      localStorage.setItem('jwt', token); // set token to auth header\n\n      setAuthToken(token); // decode token to get user data\n\n      const decoded = jwt_decode(token);\n      dispatch(updateUser);\n    }\n  });\n}; // refresh user\n// set logged in user\n\nexport const updateUser = decoded => {\n  return {\n    type: UPDATE_USER,\n    payload: decoded\n  };\n};","map":{"version":3,"sources":["/Users/aurelienmeray/Desktop/OG/vas/client/src/actions/adminActions.js"],"names":["request","setAuthToken","jwt_decode","serverConf","GET_ERRORS","UPDATE_USER","loginUser","updateAdmin","id","form","dispatch","endpoint","uri","endpoints","admin","update","put","error","response","body","res","JSON","parse","type","payload","localStorage","setItem","token","decoded","updateUser"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAuC,SAAvC;AACA,SAASC,SAAT,QAA0B,eAA1B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,EAAD,EAAKC,IAAL,KAAcC,QAAQ,IAAI;AAEjD,QAAMC,QAAQ,GAAI,GAAER,UAAU,CAACS,GAAI,GAAET,UAAU,CAACU,SAAX,CAAqBC,KAArB,CAA2BC,MAAO,IAAGP,EAAG,EAA7E;AAEAR,EAAAA,OAAO,CAACgB,GAAR,CAAYL,QAAZ,EAAsB;AAAEF,IAAAA;AAAF,GAAtB,EAAgC,CAACQ,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,KAA2B;AAEvD,UAAMC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAZ;;AAEA,QAAIF,KAAJ,EAAW;AACPP,MAAAA,QAAQ,CAAC;AACLa,QAAAA,IAAI,EAAEnB,UADD;AAELoB,QAAAA,OAAO,EAAEJ;AAFJ,OAAD,CAAR;AAIH,KALD,MAMK;AACD;AACAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BC,KAA5B,EAFC,CAID;;AACA1B,MAAAA,YAAY,CAAC0B,KAAD,CAAZ,CALC,CAOD;;AACA,YAAMC,OAAO,GAAG1B,UAAU,CAACyB,KAAD,CAA1B;AACAjB,MAAAA,QAAQ,CAACmB,UAAD,CAAR;AAEH;AACJ,GAtBD;AAuBF,CA3BK,C,CA6BP;AACA;;AACA,OAAO,MAAMA,UAAU,GAAGD,OAAO,IAAI;AACjC,SAAO;AACHL,IAAAA,IAAI,EAAElB,WADH;AAEHmB,IAAAA,OAAO,EAAEI;AAFN,GAAP;AAIH,CALM","sourcesContent":["import request from 'request';\nimport setAuthToken from '../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport serverConf from '../config'\nimport { GET_ERRORS, UPDATE_USER} from './types';\nimport { loginUser } from './authActions'\n\nexport const updateAdmin = (id, form) => dispatch => {\n\n    const endpoint = `${serverConf.uri}${serverConf.endpoints.admin.update}/${id}`;\n\n    request.put(endpoint, { form }, (error, response, body) => {\n        \n        const res = JSON.parse(body);\n\n        if (error) {\n            dispatch({\n                type: GET_ERRORS,\n                payload: res\n              })\n        }\n        else {\n            // save token to localStorage\n            localStorage.setItem('jwt', token);\n            \n            // set token to auth header\n            setAuthToken(token);\n\n            // decode token to get user data\n            const decoded = jwt_decode(token);\n            dispatch(updateUser)\n            \n        }   \n    });\n };\n\n// refresh user\n// set logged in user\nexport const updateUser = decoded => {\n    return {\n        type: UPDATE_USER,\n        payload: decoded\n    };\n};"]},"metadata":{},"sourceType":"module"}