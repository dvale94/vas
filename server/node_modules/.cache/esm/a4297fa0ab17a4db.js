let passport,User;_ab1‍.x([["default",()=>_ab1‍.o]]);_ab1‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_ab1‍.w("./models/user",[["default",["User"],function(v){User=v}]]);


const JwtStrategy = require('passport-jwt').Strategy;
const ExtractJwt = require('passport-jwt').ExtractJwt;

const opts = {};

opts.jwtFromRequest = ExtractJwt.fromAuthHeaderAsBearerToken();
opts.secretOrKey = process.env.SECRET;

passport.use(new JwtStrategy(opts, (jwt_payload, done) => {
	User.findById(jwt_payload.id)
		.then(user => {
			if (user) {
				return done(null, user);
			}
			return done(null, false);
		});
})
);

_ab1‍.d(passport);