let express,bodyParser,cors,Severity,log,db,api,config,passport;_22a‍.w("express",[["default",["express"],function(v){express=v}]]);_22a‍.w("body-parser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_22a‍.w("cors",[["default",["cors"],function(v){cors=v}]]);_22a‍.w("./utils/logger",[["Severity",["Severity"],function(v){Severity=v}],["log",["log"],function(v){log=v}]]);_22a‍.w("./services/db.js",[["default",["db"],function(v){db=v}]]);_22a‍.w("./api",[["default",["api"],function(v){api=v}]]);_22a‍.w("./config/config",[["default",["config"],function(v){config=v}]]);_22a‍.w("./config/passport",[["default",["passport"],function(v){passport=v}]]);








const app = express();

// passport middleware
app.use(passport.initialize());

app.use(cors());
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({extended: false}));

app.use('/api', api);

app.listen(config.port, () => {
    log(`VAS server now up on http://localhost:${config.port}`, Severity.Success);
    const dbUri = (config.db.username && config.db.password)
		? `mongodb+srv://${config.db.username}:${config.db.password}@${config.db.url}/${config.db.name}`
		: `mongodb+srv://${config.db.url}/${config.db.name}`;
    db.connect(dbUri);
});