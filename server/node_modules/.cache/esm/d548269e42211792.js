let passport,User,config;_422‍.x([["default",()=>_422‍.o]]);_422‍.w("passport",[["default",["passport"],function(v){passport=v}]]);_422‍.w("../models/user",[["default",["User"],function(v){User=v}]]);_422‍.w("./config",[["default",["config"],function(v){config=v}]]);



const JwtStrategy = require('passport-jwt').Strategy;
const ExtractJwt = require('passport-jwt').ExtractJwt;

const opts = {};

opts.jwtFromRequest = ExtractJwt.fromAuthHeaderAsBearerToken();
opts.secretOrKey = config.secretOrKey;

passport.use(new JwtStrategy(opts, (jwt_payload, done) => {
	User.findById(jwt_payload.id)
		.then(user => {
			if (user) {
				return done(null, user);
			}
			return done(null, false);
		});
})
);

_422‍.d(passport);